<!DOCTYPE html>
<html>

<head>
  <%- include('./layouts/head.ejs') %>

    <script src='https://api.mapbox.com/mapbox-gl-js/v2.4.1/mapbox-gl.js'></script>
    <link href='https://api.mapbox.com/mapbox-gl-js/v2.4.1/mapbox-gl.css' rel='stylesheet' />
    <style>
      #map {
        position: absolute;
        top: 60px;
        bottom: 0;
        width: 100%;
      }

      /* .mapboxgl-ctrl .mapboxgl-ctrl-group {
        position: absolute;
        left: 0;
    } */
    </style>
</head>

<body>
  <%- include('./layouts/header.ejs') %>
  <%- include('./layouts/sidebar.ejs') %>

      <main id="main">
        <div id='map'></div>
      </main>

      <script>
        mapboxgl.accessToken = 'pk.eyJ1Ijoic3VnYXJzcGljeTAwOSIsImEiOiJja3JuZWR0aXgxemtjMndwZW5tbjg5MG04In0.iSpsJUrbQiX1Z2OjIiRcFw'; // ต้องเปลี่ยนเป็น access token ของคุณ
        var map = new mapboxgl.Map({
          container: 'map',
          style: 'mapbox://styles/mapbox/streets-v11', // สามารถเปลี่ยนได้ตามต้องการ
          center: [100.6060742685167, 13.855035407124475], // กำหนดพิกัดเริ่มต้นของแผนที่ latitude, longitude
          zoom: 9 // กำหนดระดับการซูมเริ่มต้น
        });

        map.addControl(new mapboxgl.NavigationControl(), 'top-left'); // เพิ่มปุ่ม zoom in และ zoom out ด้านซ้ายบน


        function getData() {
          const url = window.location.href;
          const id = url.split("/").pop();
          let currentDate = new Date();
          let formattedDate = currentDate.toISOString().slice(0, 19).replace("T", " ");

          let data = [];
          console.log('last time ------>', formattedDate);
          if (id !== '') {
            axios
              .get('/lastTracing', { params: { deviceNumber: id } })
              .then(response => {
                data = response.data.data;
                console.log('data', data);
                createMarkers(data);
              })
              .catch(error => {
                console.log(error);
              });
          } else {
            axios
              .get('/lastTracing')
              .then(response => {
                data = response.data.data;
                console.log('=> data', data);
                createMarkers(data);
              })
              .catch(error => {
                console.log(error);
              });
          }
        }

        let markers = [];

        function createMarkers(data) {
          data.forEach((item, index) => {
            const {
              deviceNumber,
              latitude,
              longitude,
              temperature,
              humidity,
              batteryPercent,
              formattedCreatedAt,
              posmap
            } = item

            switch (index) {
              case 0:
                colorColor = "red";
                break;
              case 1:
                colorColor = "blue";
                break;
              case 2:
                colorColor = "black";
                break;
              case 3:
                colorColor = "orange";
                break;
              case 4:
                colorColor = "green";
                break;
              case 5:
                colorColor = "brown";
                break;
              case 6:
                colorColor = "purple";
            }

            // Temperature:  <span style="float: right; margin-right: 20px;">${temperature}</span><br>
            // Humidity:     <span style="float: right; margin-right: 20px;">${humidity} %</span><br>

            if (posmap == true) {
              let marker = new mapboxgl.Marker({ color: 'red', rotation: 0 })
                .setLngLat([longitude, latitude])
                .setPopup(new mapboxgl.Popup()
                  .setHTML(`
                  Device ID:    <span style="float: right; margin-right: 20px;">${deviceNumber}</span><br>
                  Latitude:     <span style="float: right; margin-right: 20px;">${latitude}</span><br>
                  Longitude:    <span style="float: right; margin-right: 20px;">${longitude}</span><br>
                  Temperature:  <span style="float: right; margin-right: 20px;${(temperature > 40) ? 'color: red;' : ''}">${temperature} </span><br>
                  Humidity:     <span style="float: right; margin-right: 20px;${(humidity > 40) ? 'color: red;' : ''}">${humidity} %</span><br>
                  Battery:      <span style="float: right; margin-right: 20px;">${batteryPercent} %</span><br>
                  Last Time: ${formattedCreatedAt}`))
                .addTo(map)
              markers.push(marker)
            }
          })
        }

        function removeMarkers() {
          markers.forEach(marker => {
            marker.remove()
          })

          markers = []
          console.log(' ')
          // console.log('removeMarkers')
        }


        // เรียกใช้ฟังก์ชัน createMarkers ในครั้งแรก
        getData()

        // สร้าง marker ใหม่ทุกๆ 5 นาที
        setInterval(() => {
          removeMarkers()
          getData();
        }, 1 * 1000 * 60)

      </script>

      <%- include('./layouts/footer.ejs') %>